# Generated by Django 4.2.7 on 2025-08-01 18:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        ('inventory', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='StockAlert',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_deleted', models.BooleanField(default=False, help_text='Soft delete flag')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when the record was soft deleted', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier', primary_key=True, serialize=False)),
                ('alert_type', models.CharField(choices=[('low_stock', 'Low Stock'), ('out_of_stock', 'Out of Stock'), ('overstock', 'Overstock'), ('expiring', 'Expiring Soon'), ('custom', 'Custom Alert')], help_text='Type of alert', max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', help_text='Alert severity level', max_length=20)),
                ('message', models.TextField(help_text='Alert message')),
                ('threshold_value', models.PositiveIntegerField(default=0, help_text='Threshold value that triggered the alert')),
                ('current_value', models.PositiveIntegerField(default=0, help_text='Current value when alert was triggered')),
                ('is_resolved', models.BooleanField(default=False, help_text='Whether alert is resolved')),
                ('resolved_at', models.DateTimeField(blank=True, help_text='Resolution timestamp', null=True)),
                ('resolution_notes', models.TextField(blank=True, help_text='Resolution notes')),
                ('product', models.ForeignKey(help_text='Product', on_delete=django.db.models.deletion.CASCADE, related_name='stock_alerts', to='products.product')),
                ('resolved_by', models.ForeignKey(blank=True, help_text='User who resolved the alert', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_alerts', to=settings.AUTH_USER_MODEL)),
                ('warehouse', models.ForeignKey(help_text='Warehouse', on_delete=django.db.models.deletion.CASCADE, related_name='stock_alerts', to='inventory.warehouse')),
            ],
            options={
                'verbose_name': 'Stock Alert',
                'verbose_name_plural': 'Stock Alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AlertRule',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_deleted', models.BooleanField(default=False, help_text='Soft delete flag')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when the record was soft deleted', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Rule name', max_length=100)),
                ('rule_type', models.CharField(choices=[('low_stock', 'Low Stock'), ('out_of_stock', 'Out of Stock'), ('overstock', 'Overstock'), ('expiring', 'Expiring Soon'), ('custom', 'Custom Rule')], help_text='Type of rule', max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', help_text='Alert severity level', max_length=20)),
                ('description', models.TextField(blank=True, help_text='Rule description')),
                ('is_active', models.BooleanField(default=True, help_text='Whether rule is active')),
                ('min_threshold', models.PositiveIntegerField(default=0, help_text='Minimum threshold value')),
                ('max_threshold', models.PositiveIntegerField(default=0, help_text='Maximum threshold value')),
                ('email_notification', models.BooleanField(default=True, help_text='Send email notifications')),
                ('dashboard_notification', models.BooleanField(default=True, help_text='Show dashboard notifications')),
                ('auto_resolve', models.BooleanField(default=False, help_text='Auto-resolve when condition is no longer met')),
                ('category', models.ForeignKey(blank=True, help_text='Product category (leave blank for all categories)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alert_rules', to='products.category')),
                ('product', models.ForeignKey(blank=True, help_text='Specific product (leave blank for all products)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alert_rules', to='products.product')),
                ('warehouse', models.ForeignKey(blank=True, help_text='Specific warehouse (leave blank for all warehouses)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='alert_rules', to='inventory.warehouse')),
            ],
            options={
                'verbose_name': 'Alert Rule',
                'verbose_name_plural': 'Alert Rules',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='AlertNotification',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_deleted', models.BooleanField(default=False, help_text='Soft delete flag')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when the record was soft deleted', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier', primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('email', 'Email'), ('dashboard', 'Dashboard'), ('sms', 'SMS'), ('webhook', 'Webhook')], help_text='Type of notification', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', help_text='Notification status', max_length=20)),
                ('recipient', models.CharField(help_text='Notification recipient', max_length=200)),
                ('message', models.TextField(help_text='Notification message')),
                ('sent_at', models.DateTimeField(blank=True, help_text='Sent timestamp', null=True)),
                ('error_message', models.TextField(blank=True, help_text='Error message if failed')),
                ('alert', models.ForeignKey(help_text='Related alert', on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to='alerts.stockalert')),
            ],
            options={
                'verbose_name': 'Alert Notification',
                'verbose_name_plural': 'Alert Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='stockalert',
            index=models.Index(fields=['product', 'warehouse'], name='alerts_stoc_product_139e71_idx'),
        ),
        migrations.AddIndex(
            model_name='stockalert',
            index=models.Index(fields=['alert_type'], name='alerts_stoc_alert_t_8d9666_idx'),
        ),
        migrations.AddIndex(
            model_name='stockalert',
            index=models.Index(fields=['severity'], name='alerts_stoc_severit_7ad2ec_idx'),
        ),
        migrations.AddIndex(
            model_name='stockalert',
            index=models.Index(fields=['is_resolved'], name='alerts_stoc_is_reso_743be4_idx'),
        ),
        migrations.AddIndex(
            model_name='stockalert',
            index=models.Index(fields=['created_at'], name='alerts_stoc_created_03c200_idx'),
        ),
        migrations.AddIndex(
            model_name='alertrule',
            index=models.Index(fields=['rule_type'], name='alerts_aler_rule_ty_e823ca_idx'),
        ),
        migrations.AddIndex(
            model_name='alertrule',
            index=models.Index(fields=['severity'], name='alerts_aler_severit_ffc0b9_idx'),
        ),
        migrations.AddIndex(
            model_name='alertrule',
            index=models.Index(fields=['is_active'], name='alerts_aler_is_acti_73e116_idx'),
        ),
        migrations.AddIndex(
            model_name='alertrule',
            index=models.Index(fields=['product'], name='alerts_aler_product_4c9642_idx'),
        ),
        migrations.AddIndex(
            model_name='alertrule',
            index=models.Index(fields=['warehouse'], name='alerts_aler_warehou_cc2245_idx'),
        ),
        migrations.AddIndex(
            model_name='alertnotification',
            index=models.Index(fields=['alert'], name='alerts_aler_alert_i_a8b128_idx'),
        ),
        migrations.AddIndex(
            model_name='alertnotification',
            index=models.Index(fields=['notification_type'], name='alerts_aler_notific_ce468d_idx'),
        ),
        migrations.AddIndex(
            model_name='alertnotification',
            index=models.Index(fields=['status'], name='alerts_aler_status_92b91f_idx'),
        ),
        migrations.AddIndex(
            model_name='alertnotification',
            index=models.Index(fields=['sent_at'], name='alerts_aler_sent_at_bd8e96_idx'),
        ),
    ]
