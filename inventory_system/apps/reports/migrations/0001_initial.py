# Generated by Django 4.2.7 on 2025-08-01 18:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_deleted', models.BooleanField(default=False, help_text='Soft delete flag')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when the record was soft deleted', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Widget name', max_length=100)),
                ('widget_type', models.CharField(choices=[('chart', 'Chart'), ('metric', 'Metric'), ('table', 'Table'), ('list', 'List')], help_text='Type of widget', max_length=20)),
                ('title', models.CharField(help_text='Widget title', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Widget description')),
                ('configuration', models.JSONField(blank=True, default=dict, help_text='Widget configuration')),
                ('position', models.PositiveIntegerField(default=0, help_text='Widget position on dashboard')),
                ('is_active', models.BooleanField(default=True, help_text='Whether widget is active')),
                ('refresh_interval', models.PositiveIntegerField(default=300, help_text='Refresh interval in seconds')),
            ],
            options={
                'verbose_name': 'Dashboard Widget',
                'verbose_name_plural': 'Dashboard Widgets',
                'ordering': ['position', 'name'],
                'indexes': [models.Index(fields=['widget_type'], name='reports_das_widget__103de8_idx'), models.Index(fields=['is_active'], name='reports_das_is_acti_fe1dea_idx'), models.Index(fields=['position'], name='reports_das_positio_35c259_idx')],
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the record was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Timestamp when the record was last updated')),
                ('is_deleted', models.BooleanField(default=False, help_text='Soft delete flag')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Timestamp when the record was soft deleted', null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier', primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Report name', max_length=200)),
                ('report_type', models.CharField(choices=[('inventory_summary', 'Inventory Summary'), ('stock_movement', 'Stock Movement'), ('purchase_orders', 'Purchase Orders'), ('supplier_analysis', 'Supplier Analysis'), ('warehouse_utilization', 'Warehouse Utilization'), ('product_performance', 'Product Performance'), ('custom', 'Custom Report')], help_text='Type of report', max_length=50)),
                ('description', models.TextField(blank=True, help_text='Report description')),
                ('format', models.CharField(choices=[('json', 'JSON'), ('csv', 'CSV'), ('pdf', 'PDF'), ('excel', 'Excel')], default='json', help_text='Report format', max_length=10)),
                ('parameters', models.JSONField(blank=True, default=dict, help_text='Report parameters')),
                ('data', models.JSONField(blank=True, default=dict, help_text='Report data')),
                ('file_path', models.CharField(blank=True, help_text='File path if exported', max_length=500)),
                ('is_scheduled', models.BooleanField(default=False, help_text='Whether report is scheduled')),
                ('schedule_frequency', models.CharField(blank=True, help_text='Schedule frequency (daily, weekly, monthly)', max_length=20)),
                ('generated_by', models.ForeignKey(blank=True, help_text='User who generated the report', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='generated_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report',
                'verbose_name_plural': 'Reports',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['report_type'], name='reports_rep_report__dbb097_idx'), models.Index(fields=['format'], name='reports_rep_format_b107b4_idx'), models.Index(fields=['is_scheduled'], name='reports_rep_is_sche_2255e9_idx'), models.Index(fields=['generated_by'], name='reports_rep_generat_4dc4d4_idx')],
            },
        ),
    ]
