import { 
  DashboardSummary, 
  Inventory, 
  Warehouse, 
  Supplier, 
  PurchaseOrder, 
  Product, 
  Category,
  StockAlert,
  StockMovement 
} from '@/types';

// Mock data for development
export const mockDashboardSummary: DashboardSummary = {
  total_products: 156,
  total_inventory_value: '$1,234,567',
  low_stock_items: 23,
  out_of_stock_items: 5,
  total_warehouses: 4,
  active_alerts: 8,
  pending_orders: 12,
  recent_movements: [
    {
      id: '1',
      product: { id: '1', name: 'Laptop', sku: 'LAP001' },
      warehouse: { id: '1', name: 'Main Warehouse' },
      movement_type: 'in',
      quantity: 50,
      created_at: new Date().toISOString(),
    },
    {
      id: '2',
      product: { id: '2', name: 'Mouse', sku: 'MOU001' },
      warehouse: { id: '1', name: 'Main Warehouse' },
      movement_type: 'out',
      quantity: 25,
      created_at: new Date(Date.now() - 3600000).toISOString(),
    },
  ],
  warehouse_utilization: [
    {
      warehouse: 'Main Warehouse',
      utilization: 75,
      capacity: 10000,
      used: 7500,
    },
    {
      warehouse: 'Secondary Warehouse',
      utilization: 45,
      capacity: 5000,
      used: 2250,
    },
  ],
  top_products: [
    {
      product: 'Laptop',
      total_value: '$500,000',
      quantity: 100,
    },
    {
      product: 'Mouse',
      total_value: '$25,000',
      quantity: 500,
    },
  ],
  alert_summary: {
    low_stock: 15,
    out_of_stock: 3,
    critical: 2,
  },
};

export const mockCategories: Category[] = [
  {
    id: '1',
    name: 'Electronics',
    description: 'Electronic devices and accessories',
    product_count: 45,
    total_value: '$750,000',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
  {
    id: '2',
    name: 'Office Supplies',
    description: 'Office equipment and supplies',
    product_count: 67,
    total_value: '$125,000',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
];

export const mockProducts: Product[] = [
  {
    id: '1',
    name: 'Laptop',
    sku: 'LAP001',
    category: mockCategories[0],
    description: 'High-performance laptop',
    unit_price: '$1,200',
    specifications: { brand: 'Dell', model: 'XPS 13' },
    total_value: '$120,000',
    stock_status: 'in_stock',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
  {
    id: '2',
    name: 'Mouse',
    sku: 'MOU001',
    category: mockCategories[0],
    description: 'Wireless mouse',
    unit_price: '$25',
    specifications: { brand: 'Logitech', wireless: true },
    total_value: '$12,500',
    stock_status: 'low_stock',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
];

export const mockWarehouses: Warehouse[] = [
  {
    id: '1',
    name: 'Main Warehouse',
    address: '123 Main St, City, State 12345',
    capacity: 10000,
    manager: 'John Doe',
    contact_email: 'john@company.com',
    contact_phone: '+1-555-0123',
    is_active: true,
    current_utilization: '75%',
    available_capacity: 2500,
    inventory_count: 45,
    total_inventory_value: '$750,000',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
  {
    id: '2',
    name: 'Secondary Warehouse',
    address: '456 Oak Ave, City, State 12345',
    capacity: 5000,
    manager: 'Jane Smith',
    contact_email: 'jane@company.com',
    contact_phone: '+1-555-0456',
    is_active: true,
    current_utilization: '45%',
    available_capacity: 2750,
    inventory_count: 23,
    total_inventory_value: '$125,000',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
];

export const mockSuppliers: Supplier[] = [
  {
    id: '1',
    name: 'Tech Supplies Inc',
    contact_person: 'Mike Johnson',
    email: 'mike@techsupplies.com',
    phone: '+1-555-0789',
    address: '789 Tech Blvd, Tech City, TC 54321',
    website: 'https://techsupplies.com',
    tax_id: 'TAX123456',
    payment_terms: 'net_30',
    is_active: true,
    total_orders: 45,
    total_order_value: '$450,000',
    average_order_value: '$10,000',
    last_order_date: new Date(Date.now() - 86400000).toISOString(),
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
  {
    id: '2',
    name: 'Office Solutions Ltd',
    contact_person: 'Sarah Wilson',
    email: 'sarah@officesolutions.com',
    phone: '+1-555-0321',
    address: '321 Office Park, Business City, BC 67890',
    website: 'https://officesolutions.com',
    tax_id: 'TAX789012',
    payment_terms: 'net_60',
    is_active: true,
    total_orders: 23,
    total_order_value: '$125,000',
    average_order_value: '$5,435',
    last_order_date: new Date(Date.now() - 172800000).toISOString(),
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
];

export const mockInventory: Inventory[] = [
  {
    id: '1',
    product: { id: '1', name: 'Laptop', sku: 'LAP001' },
    warehouse: { id: '1', name: 'Main Warehouse' },
    quantity: 100,
    reserved_quantity: 10,
    reorder_point: 20,
    max_stock_level: 150,
    available_quantity: 90,
    is_low_stock: false,
    is_out_of_stock: false,
    stock_value: '$120,000',
    stock_status: 'in_stock',
    last_updated: new Date().toISOString(),
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
  {
    id: '2',
    product: { id: '2', name: 'Mouse', sku: 'MOU001' },
    warehouse: { id: '1', name: 'Main Warehouse' },
    quantity: 15,
    reserved_quantity: 5,
    reorder_point: 25,
    max_stock_level: 100,
    available_quantity: 10,
    is_low_stock: true,
    is_out_of_stock: false,
    stock_value: '$375',
    stock_status: 'low_stock',
    last_updated: new Date().toISOString(),
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
];

export const mockPurchaseOrders: PurchaseOrder[] = [
  {
    id: '1',
    order_number: 'PO-2024-001',
    supplier: { id: '1', name: 'Tech Supplies Inc' },
    warehouse: { id: '1', name: 'Main Warehouse' },
    status: 'ordered',
    order_date: new Date(Date.now() - 86400000).toISOString(),
    expected_date: new Date(Date.now() + 86400000 * 7).toISOString(),
    received_date: null,
    total_amount: '$12,000',
    notes: 'Standard order for laptops',
    approved_by: null,
    approved_at: null,
    item_count: 2,
    total_quantity: 10,
    received_quantity: 0,
    is_complete: false,
    completion_percentage: '0%',
    days_until_expected: 7,
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
];

export const mockStockAlerts: StockAlert[] = [
  {
    id: '1',
    product: { id: '2', name: 'Mouse', sku: 'MOU001' },
    warehouse: { id: '1', name: 'Main Warehouse' },
    alert_type: 'low_stock',
    severity: 'medium',
    message: 'Mouse stock is below reorder point',
    threshold_value: 25,
    current_value: 15,
    is_resolved: false,
    resolved_at: null,
    resolved_by: null,
    resolution_notes: null,
    is_active: true,
    duration: 2,
    severity_color: 'yellow',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
];

export const mockStockMovements: StockMovement[] = [
  {
    id: '1',
    product: { id: '1', name: 'Laptop', sku: 'LAP001' },
    warehouse: { id: '1', name: 'Main Warehouse' },
    movement_type: 'in',
    quantity: 50,
    reference_type: 'purchase_order',
    reference_id: 1,
    notes: 'Received from supplier',
    movement_value: '$60,000',
    created_at: new Date().toISOString(),
    updated_at: new Date().toISOString(),
  },
];

// Mock API responses
export const mockApiResponses = {
  '/dashboard/summary/': mockDashboardSummary,
  '/categories/': { results: mockCategories, count: mockCategories.length },
  '/products/': { results: mockProducts, count: mockProducts.length },
  '/warehouses/': { results: mockWarehouses, count: mockWarehouses.length },
  '/suppliers/': { results: mockSuppliers, count: mockSuppliers.length },
  '/inventory/': { results: mockInventory, count: mockInventory.length },
  '/purchase-orders/': { results: mockPurchaseOrders, count: mockPurchaseOrders.length },
  '/alerts/': { results: mockStockAlerts, count: mockStockAlerts.length },
  '/stock-movements/': { results: mockStockMovements, count: mockStockMovements.length },
}; 